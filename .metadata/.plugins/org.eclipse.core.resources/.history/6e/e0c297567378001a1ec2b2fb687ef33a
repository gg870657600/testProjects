package calendar;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Instant;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import io.appium.java_client.android.Activity;
import io.appium.java_client.android.AndroidDriver;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
import org.apache.log4j.Logger;

import util.AssertListener;
import util.Assertion;
import util.BaseAppium;
import util.ScreenshotListener;

//断言失败监听截图;重写了断言方法，断言失败可以继续执行该用例后面的代码
@Listeners({ScreenshotListener.class})  //此处需要写入监听器注解
public class CopyOfCalendarTest {
	public static AndroidDriver androidDriver;
	String createEvent = "com.android.calendar:id/action_create_event";
	String scheduleNotice = "//*[@text = '日程测试']";
	String noticeClearButtonId = "com.android.systemui:id/clear_all_button";
	String scheduleTitleId = "com.android.calendar:id/title";
	String saveButtonId = "com.android.calendar:id/action_done";
	String moreButton = "//*[@content-desc='更多选项']";
	String deleteButton = "//*[@text = '删除']";
	String enterButton = "//*[@text='确定']";
	String remindTimeId = "com.android.calendar:id/reminder_minutes_value";
	String remindTimeSelect = "//*[@text='30 分钟']";
	String enterId = "android:id/button1";
	String permission = "android:id/title";
	String allSelectButton = "//*[@text='全选']";
	String batchSetting = "//*[@text='批量设置']";
	String allowButton = "//*[@text='允许']";
	
    @Test
    public void openCalendar() throws InterruptedException {
   	
    	WebElement el1 =  BaseAppium.webDriverWait(BaseAppium.xpath(moreButton), 10);
    	Thread.sleep(2000);   	
    }
    
    @BeforeTest
    public void beforeTest() throws IOException, InterruptedException{
    	androidDriver = BaseAppium.init("com.android.calendar", "com.android.calendar.AllInOneActivity");
    	ScreenshotListener.driver = androidDriver;
    	
    }
    @AfterTest
    public void afterTest(){
    	//当测试用例运行完毕销毁驱动
    	androidDriver.quit();
    }
    
}
