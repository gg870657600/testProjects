package calendar;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Instant;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import io.appium.java_client.android.AndroidDriver;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;
import org.apache.log4j.Logger;

import util.BaseAppium;
import util.ScreenshotListener;
import util.ScreenshotMethodObject;

@Listeners({ScreenshotListener.class})  //此处需要写入监听器注解
public class CalendarTest {
	public static AndroidDriver androidDriver;
	public static String createEvent = "com.android.calendar:id/action_create_event";
	//使用log4j需要先创建一个Logger对象
	private static Logger logger = Logger.getLogger(CalendarTest.class);
    @BeforeTest
    public void beforeTest() throws MalformedURLException{
    	androidDriver = BaseAppium.init("com.android.calendar", "com.android.calendar.AllInOneActivity");
    	ScreenshotListener.driver = androidDriver;
    }
    @Test
    public void openCalendar() throws InterruptedException {
    	//根据类名断言,是否跳到主界面(adb shell dumpsys activity | find "mFocusedActivity")
    	logger.debug("Here is some DEBUG");  
    	logger.info("Here is some INFO");  
    	logger.warn("Here is some WARN");  
    	logger.error("Here is some ERROR");  
    	logger.fatal("Here is some FATAL");
    	
    	String expected = ".AllInOneActivit";
    	String actual = androidDriver.currentActivity();
    	logger.info("actual:"+actual);
    	Assert.assertEquals(actual, expected, "打开日历错误");
    	//断言后等待2秒，因为用例失败会截图，不等待会截到下一个用例的图片
//    	Thread.sleep(2000);
    }
    @Test(priority = 2)
    public void Newschedule() throws InterruptedException {
    	BaseAppium.id(createEvent).click();
    	logger.info("click successed");
    	Assert.assertEquals(1,2);
    	Thread.sleep(2000);
    }
    @AfterTest
    public void afterTest(){
    	//当测试用例运行完毕销毁驱动
    	androidDriver.quit();
    }
    
}
