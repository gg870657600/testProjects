package deskclock;

import java.io.IOException;

import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.offset.PointOption;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.annotations.Test;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;

import util.BaseAppium;
import util.ScreenshotListener;

public class Deskclock {
	AndroidDriver androidDriver;
	String moreButton = "//*[@content-desc='更多选项']";
	String dateAndTimeButton = "//*[@text='日期和时间']";
	String automaticTimeButton = "//*[@text='自动确定日期和时间']";
	String setTimeButton = "//*[@text='设置时间']";
	String morning = "//*[@text='上午']";
	String nine = "//*[@text='9']";
	String zero = "//*[@text='00']";
	String enterButtonId = "android:id/button1";
	WebElement element1 = null;
	WebElement element2 = null;
	//闹钟
    @Test
    public void alarmClock() {
    }
    @BeforeTest
    public void beforeTest() throws IOException, InterruptedException {
    	androidDriver = BaseAppium.init("com.android.deskclock", ".DeskClock");
    	ScreenshotListener.driver = androidDriver;
    	BaseAppium.xpath(moreButton).click();
    	BaseAppium.xpath(dateAndTimeButton).click();
    	//自动确定日期和时间是否打开
    	if(BaseAppium.elList(By.id("android:id/checkbox")).get(0).getAttribute("checked").equals("true")){
    		BaseAppium.xpath(automaticTimeButton).click();
    	} 	
    	BaseAppium.xpath(setTimeButton).click();
    	
    	System.out.println("ggggggg" + BaseAppium.xpath(morning).getLocation().toString());
    	System.out.println("ggggggg2" + BaseAppium.xpath(morning).getSize().toString());
    	//设置时间
    	
    	scoll(BaseAppium.elList(By.id("android:id/numberpicker_input")).get(1),element1);
    	scoll(BaseAppium.elList(By.id("android:id/numberpicker_input")).get(2),element2);

    	//选择上午   	
    	BaseAppium.xpath(morning).click();
    	BaseAppium.id(enterButtonId).click();
    }

    @AfterTest
    public void afterTest() {
    	androidDriver.quit();
    }
    //上滑
    public void scoll(WebElement el1,WebElement el2){
    	int x = el1.getLocation().getX() + el1.getSize().getWidth() / 2 ;
    	int y = el1.getLocation().getY() + el1.getSize().getHeight() / 2 ;
    	System.out.println("x:" + x + ";y:" + y);
    	while(true){
    		try{
    			el2 = BaseAppium.xpath(nine);
    		}catch(Exception e){
    			
    		}
    		if(el2 != null && el2.getAttribute("focusable").equals("true")){
    			break;
    		}
    		new TouchAction(androidDriver).press(PointOption.point(x, y))
            .moveTo(PointOption.point(x, y + 10)).release().perform();
    		System.out.println("focusable:" + el1.getAttribute("focusable"));		
    	}
    }
    public void scoll2(WebElement el1,WebElement el2){
    	int x = el1.getLocation().getX() + el1.getSize().getWidth() / 2 ;
    	int y = el1.getLocation().getY() + el1.getSize().getHeight() / 2 ;
    	System.out.println("x:" + x + ";y:" + y);
    	while(true){
    		try{
    			el2 = BaseAppium.xpath(zero);
    		}catch(Exception e){
    			
    		}
    		if(el2 != null && el2.getAttribute("focusable").equals("true")){
    			break;
    		}
    		new TouchAction(androidDriver).press(PointOption.point(x, y))
            .moveTo(PointOption.point(x, y + 10)).release().perform();
    		System.out.println("focusable:" + el1.getAttribute("focusable"));		
    	}
    }

}
